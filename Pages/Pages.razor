@page "/{id}"

@inject HttpClient Http

@using Blog.Models

@using Microsoft.Extensions.Hosting

@using MudBlazor

@using System.Net.Http.Json
@using System.Net.Http
@using System.Threading.Tasks

@using static Blog.Pages.Home

<style>
	.post{
		display: flex;
		flex-direction: column;
		grid-template-columns: repeat(2, 1fr);
		justify-content: center;
		align-items: start;
		border-radius: 10px;
		box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
		margin-top: 16px;
		min-height: 550px;
		width: 100%;
		background-repeat: no-repeat;
		background-size: cover;
		background-position: center;
		background-blend-mode: overlay;
		object-fit: cover;
		align-items: start;
		height: 590px;
		padding: 80px 5%;
		margin-bottom: 50px;
		color: #fff;
	}
	.description{
		margin-left: 50px;
	}
	.readme-btn {
		color: #000;
		padding-bottom: 2px;
		margin-bottom: 5px;
		border-radius: 2px;
		border-bottom: 2px solid var(--text-color);
	}
	.comment{
		border-radius: 10px;
		box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
	}
	.img{
		border-radius: 10px;
		width; 100%;
		height: 100%;
	}
	.text{
		font-size: 1.5rem;
		border-radius: 10px;
		box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
		background-color: rgba(255, 255, 255, 0.5);
		color: black;
	}
</style>

@if(post != null)
{
	<div class="post" style="background-image: url('@post.Url'); background-size: cover;">
		<div class="text" style="text-align:center">
			<h1>@post.Title</h1>
			<p>@post.Description</p>
		</div>
	</div>
}
else
{
	<MudText Typo="Typo.h2" Style="color:red; margin-top: 50px">Post non trovato</MudText>
}

@code {
	[Parameter] public string id { get; set; } = string.Empty;
	public Guid postId; 

	public Post? post;

	public Commenti[]? comments;

	public Risposte[]? risposte;

	public bool rispondi = false;
	public bool True = false;

	protected override async Task OnInitializedAsync()
	{
		postId = Guid.Parse(id);
		post = await Http.GetFromJsonAsync<Post>($"api/Post/{postId}");
		comments = await Http.GetFromJsonAsync<Commenti[]>($"api/Commenti");
		risposte = await Http.GetFromJsonAsync<Risposte[]>($"api/Risposte");
	}

	public void Rispondi()
	{
		if(rispondi == false)
		{
			rispondi = true;
		}
		else
		{
			rispondi = false;
		}
	}

	public void Switch()
	{
		if(True == false)
		{
			True = true;
		}
		else
		{
			True = false;
		}
	}
}